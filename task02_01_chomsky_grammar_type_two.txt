Oleksandra Baga

======================

Given in the task:

R01: Gb : "A" 
R02: Gb : "B" 
... 
R26: Gb : "Z" 
R27: Kb : "a" 
R28: Kb : "b" 
...
R52: Kb : "z" 
R53: Ziff : "0" 
R54: Ziff : "1" 
...
R62: Ziff : "9" 
R63: SoZe : "."
R64: SoZe : "!"
R65: SoZe : "?"
R66: SoZe : "#"

======================

Solved:

FS01: Alle nicht-leeren Ziffernfolgen All non-empty numbers (yes: 123, 0, 0007654, no: abc, a123, 123BC, äöüß).  Start symbol: ZiffFo.

R01:    ZiffFO      : Ziff A
R02:    A           : Ziff A
R03:    A           : Epsilon

FS02: All non-empty strings. As a character should be allowed exactly 66 characters, which will be mentioned in the above rules.

R01:    ZeichFO     : Gb A
R02:    ZeichFO     : Kb A
R03:    ZeichFO     : Ziff A
R04:    ZeichFO     : SoZe A
R05:    ZeichFO     : ZeichFO
R06:    A           : Epsilon

All non-empty character strings. The letters should be exactly the 52 characters allowed, which were mentioned in the rules R01 to R52 (yes: abcd, ABCD, aBcD, aBCd, aAABbb, Hello no: a1, 1A, Hello!). Start symbol: BuFo.

R01:    BuFo        : Gb A
R02:    BuFo        : Kb A
R03:    A           : Bufo
R04:    A           : Epsilon

FS04: All non-empty letter sequences that begin with a capital or small letter, but otherwise only consist of (0 or more) small letters (yes: abc, abc, dddeeefff, dddeeefff, a, A, no: AB, endSum, x Y). Start: GK_BuFo.

R01:    GK_BuFo     : Gb A
R02:    GK_BuFo     : Kb A
R03:    A           : Kb A
R04:    A           : Epsilon

FS05: All non-empty digit sequences without unnecessary leading zeros. This includes all sequences of numbers that start with a number other than 0 and also the number sequence 0

R01:    OFN_Z       : "1" A
R02:    OFN_Z       : "2" A
R03:    OFN_Z       : "3" A
R04:    OFN_Z       : "4" A
R05:    OFN_Z       : "5" A
R06:    OFN_Z       : "6" A
R07:    OFN_Z       : "7" A
R08:    OFN_Z       : "8" A
R09:    OFN_Z       : "9" A
R10:    OFN_Z       : "0"
R11:    A:          Ziff A
R12:    A:          Epsilon

FS06: All non-empty sequences of words of language FS04, each with a semicolon ";" (yes: butter, eggs, quark, or abc; abc; aabbcc; or abc; or def; or a; b; c; d; no: abc or abc ;; or; abc or abc ;; def).

R01:    SemAbg      : Gb_Bufo ";" A
R02:    A           : SemAbg
R03:    A           : Epsilon


FS07: All non-empty sequences of words of language FS04 separated by commas "," "

R01:    KommGetr:   : Gb_Bufo A
R02:    A           : "," KommGetr
R03:    A           : Epsilon

FS08: All non-empty sequences of words of language FS01 separated by number sign "#"

R01:    NZ_Getr     : ZiffFO A
R02:    A           : "#" NZ_Getr
R03:    A           : Epsilon

FS09: All non-empty sequences of words of language FS01, each of which ends with a number sign "#"

R01:    NZ_Abg      : ZiffFO "#" A
R02:    A           : NZ_Abg
R03:    A           : Epsilon


FS10: All non-empty sequences of even length of words, for which the following applies: The words in odd position (ie the 1st, 3rd, 5th ... word) come from the language FS04 and the words in even position (ie the 2, 4, 6 ... word) from the language FS01

R01:    PaarFO      : GK_Bufo ZiffFO A
R02:    A           : PaarFO
R03:    A           : Epsilon

FS11: All non-empty sequences of words that come alternately from FS01 and FS04. The first (and possibly only) word of such a sequence may optionally come from FS01 or FS04

R01:    Alt104      : GK_Bufo A
R02:    Alt104      : ZiffFO B
R03:    A           : ZiffFO B
R04:    A           : Epsilon
R05     B           : GK_Bufo A
R06:    B           : Epsilon

FS12: Same as FS11, but every word from FS01 or FS04 should be terminated by a number sign "#"

R01:    NZ_Getr_0104    : GK_Bufo "#" A
R02:    NZ_Getr_0104    : ZiffFO "#" B
R03:    A               : ZiffFO "#" B
R04:    B               : GK_Bufo "#" A
R05:    A               : Epsilon
R06:    B               : Epsilon